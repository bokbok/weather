{"version":3,"sources":["sound/Player.js","scripts/script.js","components/speedcontrol.js","components/sonificationselection.js","App.js","reportWebVitals.js","index.js"],"names":["Player","script","this","audioContext","AudioContext","voice","window","speechSynthesis","getVoices","find","name","soundCache","SoundCache","config","sonification","fetch","sonificationData","json","Sonification","play","defaultise","val","defa","_playIntro","_playSonification","playIntro","intro","part","_speak","text","Promise","all","_playSound","sound","volume","balance","lowPass","_pause","pauseAfter","console","log","hours","hour","spoken","startTime","currentTime","hourSounds","sounds","map","speak","push","concat","time","resolve","setTimeout","vol","bal","cutoff","getSound","snd","soundBuffer","buffer","start","sampleSource","createBufferSource","gainNode","createGain","connect","destination","log2vol","Math","gain","value","pow","panner","createStereoPanner","pan","biquadFilter","createBiquadFilter","type","frequency","loop","stop","sonificationSpeed","onended","msg","SpeechSynthesisUtterance","rate","narrationSpeed","onend","Sound","audioBuffer","cache","filepath","response","arrayBuffer","decodeAudioData","Script","SpeedControl","props","label","onChange","min","max","Component","SonificationSelection","App","React","useState","isPlaying","setIsPlaying","setSonificationSpeed","setNarrationSpeed","setSonification","setPlayIntro","player","useEffect","className","Button","as","size","disabled","onClick","checked","ev","target","parseFloat","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36cf011b.chunk.js","sourcesContent":["class Player {\n    constructor(script) {\n        this.audioContext = new AudioContext();\n        this.voice = window.speechSynthesis.getVoices().find((voice) => voice.name === 'Karen')\n        this.script = script\n        this.soundCache = new SoundCache(this.audioContext)\n    }\n\n    async play(config, sonification) {\n        const sonificationData = await fetch(sonification)\n        const json = await sonificationData.json()\n        await new Sonification(config, this.audioContext, this.voice, this.script, this.soundCache, json).play()\n    }\n}\n\nfunction defaultise(val, defa) {\n    if (typeof val === 'undefined') {\n        val = val || defa\n    }\n    return val\n}\n\nclass Sonification {\n    constructor(config, audioContext, voice, script, soundCache, sonification) {\n        this.audioContext = audioContext;\n        this.voice = voice\n        this.script = script\n        this.sonification = sonification\n        this.config = config\n        this.soundCache = soundCache\n    }\n\n    async play() {\n        await this._playIntro()\n        await this._playSonification();\n    }\n\n\n    async _playIntro() {\n        if (this.config.playIntro) {\n            for (const part of this.script.intro) {\n                await this._speak(part.text);\n                await Promise.all([this._playSound(part.sound,\n                                                          defaultise(part.volume, 1),\n                                                          defaultise(part.balance, 0),\n                                                          defaultise(part.lowPass, 20000))])\n                await this._pause(part.pauseAfter || 0);\n            }\n            console.log(\"Played intro\")\n        }\n    }\n\n    async _playSonification() {\n        for (const hour of this.sonification.hours) {\n            const spoken = []\n            const startTime = this.audioContext.currentTime\n            const hourSounds = hour.sounds.map((sound) => this._playSound(sound.sound,\n                                                                defaultise(sound.volume, 1),\n                                                                defaultise(sound.balance, 0),\n                                                                defaultise(sound.lowPass, 20000),\n                                                                startTime))\n            if (hour.speak) {\n                spoken.push(this._speak(hour.speak));\n            }\n            await Promise.all(spoken.concat(hourSounds))\n            console.log(\"Played \" + hour.speak)\n        }\n        console.log(\"Played sonification\")\n\n    }\n\n    async _pause(time) {\n        return new Promise(resolve => {\n            setTimeout(resolve, 1000 * time);\n        });\n    }\n\n\n    async _playSound(sound, vol, bal, cutoff, startTime) {\n        if (!sound) {\n            return Promise.resolve();\n        }\n\n        const audioContext = this.audioContext;\n        const snd = await this.soundCache.getSound(sound)\n        const soundBuffer = snd.buffer()\n        const start = defaultise(startTime, audioContext.currentTime)\n\n        const sampleSource = audioContext.createBufferSource();\n        sampleSource.buffer = soundBuffer;\n\n        const gainNode = audioContext.createGain();\n        gainNode.connect(audioContext.destination)\n\n        const log2vol = Math.log(vol) / Math.log(2)\n        gainNode.gain.value = Math.pow(10, log2vol)\n\n        const panner = audioContext.createStereoPanner()\n        panner.connect(gainNode)\n\n        panner.pan.value = bal\n\n\n        const biquadFilter = audioContext.createBiquadFilter();\n        biquadFilter.type = \"lowpass\"\n        biquadFilter.frequency.value = cutoff\n\n        biquadFilter.connect(panner)\n\n        sampleSource.connect(biquadFilter)\n\n        sampleSource.loop = true;\n\n        return new Promise(resolve => {\n            console.log(start)\n            sampleSource.start(start);\n            sampleSource.stop(start + (1.5 / this.config.sonificationSpeed));\n\n            sampleSource.onended = resolve\n        });\n    }\n\n    async _speak(text) {\n\n        return new Promise(resolve => {\n            const msg = new SpeechSynthesisUtterance();\n            msg.text = text\n            msg.voice = this.voice\n            msg.rate = this.config.narrationSpeed\n\n            msg.onend = resolve\n            window.speechSynthesis.speak(msg)\n        });\n    }\n\n}\n\nclass Sound {\n    constructor(audioBuffer) {\n        this.audioBuffer = audioBuffer\n    }\n\n    buffer() {\n        return this.audioBuffer;\n    }\n}\n\nclass SoundCache {\n    constructor(audioContext) {\n        this.cache = {}\n        this.audioContext = audioContext\n    }\n\n    async getSound(filepath) {\n        if (!this.cache[filepath]) {\n            const response = await fetch(\"./\" + filepath);\n            const arrayBuffer = await response.arrayBuffer();\n            const audioBuffer = await this.audioContext.decodeAudioData(arrayBuffer);\n            this.cache[filepath] = new Sound(audioBuffer)\n        }\n        return this.cache[filepath];\n    }\n}\n\nexport default Player;","\nconst Script = {\n    intro : [\n        // {\n        //     text: \"Weather in Melbourne on the 5th of December, twenty twenty.\\n\",\n        //     sound: null,\n        //     pauseAfter: 2\n        // },\n        {\n            text: \"Temperature is represented like a Geiger Counter, with more ticks for higher temperatures. For example, 10 degrees.\",\n            sound: \"/sounds/ticks_10_c.wav\"\n        },\n        {\n            text: \"and 20 degrees.\",\n            sound: \"/sounds/ticks_20_c.wav\",\n            pauseAfter: 1\n        },\n        {\n            text: \"Wind strength is represented by the volume of the wind sound. For example, 10 kilometres per hour.\",\n            sound: \"/sounds/wind.wav\",\n            volume: 0.2\n\n        },\n        {\n            text: \"25 kilometres per hour.\",\n            sound: \"/sounds/wind.wav\",\n            volume: 0.5\n        },\n        {\n            text: \"and 50 kilometres per hour.\",\n            sound: \"/sounds/wind.wav\",\n            volume: 1,\n            pauseAfter: 1\n        },\n        {\n            text: \"The wind sound moves according to the wind's source direction. Westerly wind's are on the left hand side.\",\n            sound: \"/sounds/wind.wav\",\n            volume: 1,\n            balance: -1\n        },\n        {\n            text: \"Easterly wind's are on the right hand side.\",\n            sound: \"/sounds/wind.wav\",\n            volume: 1,\n            balance: 1,\n            pauseAfter: 1\n        },\n        {\n            text: \"Northerly wind's are in front.\",\n            sound: \"/sounds/wind.wav\",\n            volume: 1,\n            balance: 0,\n        },\n        {\n            text: \"Southerly wind's are behind.\",\n            sound: \"/sounds/wind.wav\",\n            volume: 1,\n            balance: 0,\n            lowPass: 600,\n            pauseAfter: 1\n        },\n        {\n            text: \"Wind's can be heard in all directions, including the south east.\",\n            sound: \"/sounds/wind.wav\",\n            volume: 1,\n            balance: 0.3,\n            lowPass: 600,\n        },\n        {\n            text: \"The north east.\",\n            sound: \"/sounds/wind.wav\",\n            volume: 1,\n            balance: 0.3,\n        },\n        {\n            text: \"The south west.\",\n            sound: \"/sounds/wind.wav\",\n            volume: 1,\n            balance: -0.3,\n            lowPass: 600,\n        },\n        {\n            text: \"And the north west.\",\n            sound: \"/sounds/wind.wav\",\n            volume: 1,\n            balance: -0.3,\n            pauseAfter: 1\n        },\n        {\n            text: \"A rain sound is heard when the chance of rain is above 25%. It increases in intensity for the amount of rain expected. For example, 0.1 millimetres\",\n            sound: \"/sounds/light_rain.wav\"\n        },\n        {\n            text: \"1 millimetre\",\n            sound: \"/sounds/medium_rain.wav\"\n        },\n        {\n            text: \"and 2 millimetres\",\n            sound: \"/sounds/heavy_rain.wav\",\n            pauseAfter: 1\n        },\n        {\n            text: \"Time will be indicated with every third hour being announced.\",\n            pauseAfter: 1\n        },\n        {\n            text: \"We now begin our sonification of the weather, starting at midnight.\",\n            sound: null,\n            pauseAfter: 2\n        }\n    ]\n}\n\nexport default Script;","import React, { Component } from 'react';\n\nexport class SpeedControl extends Component {\n\n    render() {\n\n        return(\n            <p>\n                <label>{this.props.label}</label>\n                <select onChange={this.props.onChange}>\n                    <option value={1.0}>Medium</option>\n                    <option value={this.props.min}>Slow</option>\n                    <option value={this.props.max}>Fast</option>\n                </select>\n            </p>\n        )\n    }\n\n\n}","import React, { Component } from 'react';\n\nexport class SonificationSelection extends Component {\n\n    render() {\n\n        return(\n            <p>\n                <label>Select date</label>\n                <select onChange={this.props.onChange}>\n                    <option value=\"melb20201205\">5th December 2020</option>\n                    <option value=\"melb20201204\">4th December 2020</option>\n                    <option value=\"melb20201105\">5th November 2020</option>\n                    <option value=\"melb20210205\">5th February 2021</option>\n                </select>\n            </p>\n        )\n    }\n\n\n}","import './App.css';\nimport React from \"react\";\nimport Button from 'react-bootstrap/Button';\n\nimport Player from './sound/Player';\nimport Script from './scripts/script'\nimport { SpeedControl } from \"./components/speedcontrol\"\nimport { SonificationSelection } from './components/sonificationselection'\n\nfunction App() {\n    const [isPlaying, setIsPlaying] = React.useState(false);\n    const [sonificationSpeed, setSonificationSpeed] = React.useState(1.0);\n    const [narrationSpeed, setNarrationSpeed] = React.useState(1.0);\n    const [sonification, setSonification] = React.useState('melb20201205');\n    const [playIntro, setPlayIntro] = React.useState(true);\n\n    const player = new Player(Script);\n\n    React.useEffect(() => {\n        if (isPlaying) {\n            player.play({ sonificationSpeed, narrationSpeed, playIntro }, `/data/${sonification}.json`);\n            setIsPlaying(false)\n        }\n    }, [isPlaying]);\n\n    const play = () => {\n        setIsPlaying(true)\n    }\n\n    const changeSonificationSpeed = (ev) => {\n        setSonificationSpeed(parseFloat(ev.target.value))\n    }\n\n    const changeNarrationSpeed = (ev) => {\n        setNarrationSpeed(parseFloat(ev.target.value))\n    }\n\n    const changeSonification = (ev) => {\n        setSonification(ev.target.value)\n    }\n\n    const changeIntro = (ev) => {\n        setPlayIntro(ev.target.checked)\n        return true;\n    }\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <p>\n                    <Button as=\"input\"\n                            size=\"lg\"\n                            disabled={isPlaying}\n                            type=\"button\"\n                            value=\"Play\"\n                            onClick={play}/>{' '}\n                </p>\n                <p>\n                    <label>Play Intro</label><input type=\"checkbox\" checked={playIntro} onChange={changeIntro}/>\n                </p>\n                <p>\n                    <SonificationSelection onChange={changeSonification}/>\n                </p>\n                <p>\n                    <SpeedControl min={0.8} max={1.2} label=\"Narration speed\" onChange={changeNarrationSpeed}/>\n                </p>\n                <p>\n                    <SpeedControl min={0.5} max={2} label=\"Sonification speed\" onChange={changeSonificationSpeed}/>\n                </p>\n            </header>\n        </div>\n    );\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}